#include <iostream>
#include "Romb.h"
#include "DerivativeRomb.h"

using namespace std;
/*==========================================================================================
Используя класс, созданный в результате выполнения предыдущей лабораторной работы, разработать производный класс. 
Геометрическую фигуру необходимо передвинуть, повернуть.
Добавить в производный класс следующие новые возможности:
•	запоминание первоначального расположения объекта (линии или фигуры) при ее создании;
•	функцию-член, выполняющую перенос центра координат в новую точку (сХ, cY) и/или на заданное смещение (x, y);
•	функцию-член, выполняющую сброс измерений, т.е. возврат объекта (линии или фигуры) в первоначальное положение.
В функции main организовать ввод конкретных параметров объекта с клавиатуры, создание объекта (экземпляра класса), 
тестирование всех его методов (как старых, так и новых) в текстовом режиме с выдачей соответствующих сообщений.
Организовать исходный текст в виде пяти исходных файлов:
•	заголовочный с описанием класса (*.h) из предыдущей части задания;
•	с реализацией методов (функций-членов) класса (*.cpp) из предыдущей части задания;
•	заголовочный с описанием нового базового/производного класса (*.h);
•	с реализацией методов (функций-членов) нового базового/производного класса (*.cpp);
•	с функцией main (*.cpp).
Для тестирования необходимо подготовить тестовые данные с заранее известными правильными результатами.
Предлагается определить классы и их иерархию, а также продемонстрировать использование введенных конструкций при работе.
==========================================================================================*/

int main()
{
    setlocale(LC_ALL, "ru");
    int i = 0;
    NewRomb romb;


    while (i != -1)
    {
        switch (i)
        {
        case 0: //Основное меню
        {
            cout << "Введите 1 для создания ромба(по трём точкам)" << endl;
            cout << "Введите 2 для проверки принадлежности точки границе фигуры(с допуском 0.005)" << endl;
            cout << "Введите 3 для проверки пересечения фигурой осей абсцисс и ординат" << endl;
            cout << "Введите 4 для вывода параметров ромба" << endl;
            cout << "Функции класса-наследника:" << endl;
            cout << "Введите 5 для возвращения фигуры к изначальным параметрам до смещения и поворота" << endl;
            cout << "Введите 6 для смещения фигуры относительно центра координат" << endl;
            cout << "Введите 7 для поворота фигуры относительно центра и оси OX" << endl;
            cout << "Введите любое другое целое число(кроме 0) для завершения программы" << endl;
            cin >> i;

            break;
        }
        case 1:
        {
            romb.NewCreateRomb();
            
            i = 0;

            break;
        }
        case 2:
        {
            if (romb.isRomb)
            {
                Point check_point;
                cout << "Введите значения X и Y точки, которую вы хотите проверить на принадлежность границе фигуры(через пробел)" << endl;
                cin >> check_point.x >> check_point.y;
                romb.CheckPoint(check_point);
                cout << endl;
            }
            else
                cout << "Ромб ещё не задан!" << endl;
            i = 0;

            break;
        }
        case 3:
        {
            if (romb.isRomb)
                romb.CheckCross();
            else
                cout << "Ромб ещё не задан!" << endl;
            i = 0;

            break;
        }
        case 4:
        {
            if (romb.isRomb)
                romb.NewPrintRomb();
            else
                cout << "Ромб ещё не задан!" << endl;
            i = 0;

            break;
        }
        case 5:
        {
            if (romb.isRomb)
                romb.Reset();
            else
                cout << "Ромб ещё не задан!" << endl;
            i = 0;

            break;
        }
        case 6:
        {
            if (romb.isRomb)
                romb.MoveRomb();
            else
                cout << "Ромб ещё не задан!" << endl;
            i = 0;

            break;
        }
        case 7:
        {
            if (romb.isRomb)
                romb.TurnRomb();
            else
                cout << "Ромб ещё не задан!" << endl;
            i = 0;

            break;
        }
        default:
        {
            i = -1;
        }
        }
    }
}